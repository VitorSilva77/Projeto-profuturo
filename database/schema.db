CREATE DATABASE IF NOT EXISTS pro_futuro_schema;

USE pro_futuro_schema;

CREATE TABLE roles (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(50) NOT NULL UNIQUE, -- 'TI', 'RH', 'Professor', 'Aluno'
    descricao TEXT
);

CREATE TABLE usuarios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    role_id INT NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (role_id) REFERENCES roles(id)
);

-- Índice para buscas rápidas por email
CREATE INDEX idx_usuarios_email ON usuarios(email);

CREATE TABLE cursos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(255) NOT NULL,
    descricao TEXT,
    carga_horaria INT, -- Em horas
    professor_id INT, -- O professor responsável
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (professor_id) REFERENCES usuarios(id) ON DELETE SET NULL
);

-- Índice para buscas rápidas por professor
CREATE INDEX idx_cursos_professor_id ON cursos(professor_id);

CREATE TABLE matriculas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    aluno_id INT NOT NULL,
    curso_id INT NOT NULL,
    data_matricula DATE DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(50) DEFAULT 'cursando', -- 'cursando', 'concluido', 'cancelado'
    nota_final DECIMAL(5, 2), -- Ex: 100.00 ou 9.75
    
    FOREIGN KEY (aluno_id) REFERENCES usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (curso_id) REFERENCES cursos(id) ON DELETE CASCADE,
    
    -- Garante que um aluno não pode se matricular no mesmo curso duas vezes
    UNIQUE(aluno_id, curso_id) 
);

-- Índices para relatórios rápidos
CREATE INDEX idx_matriculas_aluno_id ON matriculas(aluno_id);
CREATE INDEX idx_matriculas_curso_id ON matriculas(curso_id);

CREATE TABLE logs_auditoria (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL, -- Quem fez a ação
    acao VARCHAR(100) NOT NULL, -- Ex: 'LOGIN', 'CREATE_USER', 'DELETE_COURSE'
    target_type VARCHAR(100), -- Ex: 'Usuario', 'Curso'
    target_id INT, -- ID da entidade afetada (ex: o id do curso deletado)
    detalhes JSON,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
);

-- Índices para consulta rápida de logs
CREATE INDEX idx_logs_usuario_id ON logs_auditoria(usuario_id);
CREATE INDEX idx_logs_target ON logs_auditoria(target_type, target_id);